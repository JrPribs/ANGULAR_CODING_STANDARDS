{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "plugins": [
        "angular-standards"
      ],
      "rules": {
        // Existing Angular ESLint rules for coding standards
        // Note: prefer-standalone-component is complemented by our enforce-standalone-components rule
        "@angular-eslint/prefer-standalone-component": "error",
        "@angular-eslint/prefer-on-push-component-change-detection": "error",
        // Note: use-injectable-provided-in is enhanced by our enforce-injectable-provided-in-root rule
        "@angular-eslint/use-injectable-provided-in": "off", // Disabled in favor of our custom rule with auto-fix
        "@angular-eslint/component-file-suffix": ["error", {
          "suffixes": ["component.ts", "page.ts"]
        }],
        "@angular-eslint/component-selector": ["error", {
          "type": "element",
          "prefix": "app",
          "style": "kebab-case"
        }],
        "@angular-eslint/directive-selector": ["error", {
          "type": "attribute",
          "prefix": "app",
          "style": "camelCase"
        }],
        
        // Custom Angular Standards rules
        "angular-standards/enforce-signal-inputs": "error",
        "angular-standards/enforce-inject-function": "error",
        "angular-standards/no-component-data-fetch": "error",
        "angular-standards/enforce-feature-isolation": ["error", {
          "featureRoot": "src/app",
          "sharedPaths": ["shared", "core"]
        }],
        "angular-standards/enforce-injectable-provided-in-root": "error",
        "angular-standards/enforce-standalone-components": "error",
        "angular-standards/no-promise-in-observable": "error",
        
        // TypeScript rules
        "@typescript-eslint/explicit-function-return-type": ["error", {
          "allowExpressions": true,
          "allowTypedFunctionExpressions": true
        }],
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/strict-boolean-expressions": ["error", {
          "allowNullableObject": true
        }],
        
        // File size limits
        "max-lines": ["error", {
          "max": 350,
          "skipBlankLines": true,
          "skipComments": true
        }],
        
        // Import ordering
        "import/order": ["error", {
          "groups": [
            "builtin",
            "external",
            ["internal", "parent", "sibling", "index"]
          ],
          "pathGroups": [
            {
              "pattern": "@angular/**",
              "group": "external",
              "position": "before"
            },
            {
              "pattern": "@app/**",
              "group": "internal"
            },
            {
              "pattern": "@shared/**",
              "group": "internal"
            }
          ],
          "pathGroupsExcludedImportTypes": ["@angular/**"],
          "newlines-between": "always",
          "alphabetize": {
            "order": "asc",
            "caseInsensitive": true
          }
        }],
        
        // Prevent relative imports outside of feature
        "no-restricted-imports": ["error", {
          "patterns": [
            {
              "group": ["../*"],
              "message": "Use absolute imports with @ prefix instead of relative imports"
            }
          ]
        }],
        
        // General code quality
        "no-console": ["error", {
          "allow": ["warn", "error"]
        }],
        "no-debugger": "error",
        "eqeqeq": ["error", "always"],
        "curly": ["error", "all"],
        "brace-style": ["error", "1tbs"],
        "comma-dangle": ["error", "always-multiline"],
        "semi": ["error", "always"],
        "quotes": ["error", "single", {
          "avoidEscape": true
        }]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/no-negated-async": "error",
        "@angular-eslint/template/no-duplicate-attributes": "error"
      }
    },
    {
      "files": [
        "*.spec.ts"
      ],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "max-lines": ["error", {
          "max": 500
        }]
      }
    }
  ],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  }
}